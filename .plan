[keys]
======================
+ --> done
* --> dropped
- --> to-do
======================


+ prepare train-data => [left, right, top_seg, top_ipm] 
+ generate dataset.json
+ fix train.py
+ train trimmed model
+ convert / visualize top_seg file in rgb
* visualize models 
* migrate to recommended pytorch / vision version
+ fix bev_segmented dataset
+ convert bev_segmented to single channel 

* use 2 classes => void + canopy

+ fix GT seg-mask resolution across files
* why are there huge black patches in GT? 
+ why is segmented-bev not centered in GT? 
- fix num_workers for train_loader
- fix transpose=True for SegLoader
- figure out the co-ordinate system

- utility to generate bev frames to s3

+ visualise cropped-seg-masks-mono in rgb
+ eval on the trained model
+ generate square shaped top_seg train-data
- provision for multiple training log folders

=================
why is loss not dropping?
==================
- scale cx, cy, fx, fy
- check fx scaling
- camera baseline scaling
- disparity scaling
- handle image resizing effect on disparity

- stereo rectification 
- z / y swap
- fix model preprocessing step
- importance of transpose

- passing camera orientation
+ how can y-min be negative? 

- enable saving of intermediate epochs 
- plot epoch loss
- decide on the the epoch count
+ increase batch size
- figure out learning rate stretegy -> [use crestereo]
- enable multi-gpu training


- fix input segmentation masks ->  probabilty distribution vs discrete
- z-indices out-of-bounds error while bev_pcd -> bev_png
- check evaluation 
- check mono --> rgb seg-mask conversion in evaluate_model.py
